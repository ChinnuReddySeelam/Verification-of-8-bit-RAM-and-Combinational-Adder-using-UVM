class monitor extends uvm_monitor;
`uvm_component_utils(monitor)
uvm_analysis_port #(transaction) send;
virtual ram_if rif;
transaction t;
  function new(input string inst = "monitor", uvm_component parent = null);
    super.new(inst,parent); 
  endfunction
  virtual function void build_phase(uvm_phase phase);
  super.build_phase(phase);
  t = transaction::type_id::create("TRANS");
    send = new("send",this);
  if(!uvm_config_db#(virtual ram_if)::get(this,"","rif",rif))
  `uvm_error("MON", "Unable to access Interface");
endfunction
virtual task run_phase(uvm_phase phase);
forever begin
@(posedge rif.clk);  
t.wr = rif.wr;
t.din = rif.din;
t.addr = rif.addr;
if(rif.wr == 1'b0) begin
    @(posedge rif.clk)
    t.dout = rif.dout;
end 
  `uvm_info("MON", $sformatf("DUT -> MON wr:%0d addr :%0d din:%0d dout:%0d",t.wr, t.addr,t.din, t.dout), UVM_NONE);
send.write(t);
end
endtask
endclass